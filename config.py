# https://t.me/ultroid_official

import os
import logging
from logging.handlers import RotatingFileHandler

TG_BOT_TOKEN = os.environ.get("TG_BOT_TOKEN", "6340284890:AAGj-EHyR0lHNFvWKV75VpYJPiACikFeMfU")
APP_ID = int(os.environ.get("APP_ID", "9111115"))
API_HASH = os.environ.get("API_HASH", "2a5342b0ef40f0a19d69852e076ff34b")
 
BAN = int(os.environ.get("BAN", "1865273490")) #Owner user id - dont chnge 
OWNER = os.environ.get("OWNER", "lucix_y_z") #Owner username
OWNER_ID = int(os.environ.get("OWNER_ID", "1865273492")) #Owner user id
OWNER_USERNAME = os.environ.get('OWNER_USERNAME', 'luciferx_y_z')
SUPPORT_GROUP = os.environ.get("SUPPORT_GROUP", "luciferx_y_z") # WITHOUR @
CHANNEL = os.environ.get("CHANNEL", "@Jelly_Apps") # WITHOUR @

#pic
FORCE_PIC = os.environ.get("FORCE_PIC", "https://envs.sh/YvH.jpg")
START_PIC = os.environ.get("START_PIC", "https://envs.sh/Yv9.jpg")
TOKEN_PIC = os.environ.get("TOKEN_PIC", "https://envs.sh/y28.jpg")
PRM_PIC = os.environ.get("PRM_PIC", "https://envs.sh/FLU.jpg")

#auto delete
DELETE_AFTER = int(os.environ.get("DELETE_AFTER", '2400')) #seconds
NOTIFICATION_TIME = int(os.environ.get('NOTIFICATION_TIME', 30)) #seconds
AUTO_DELETE = os.environ.get("AUTO_DELETE", True) #ON/OFF
GET_AGAIN = os.environ.get("GET_AGAIN", False) #ON/OFF
DELETE_INFORM = os.environ.get("INFORM" , "Successfully DELETED !!")
NOTIFICATION = os.environ.get("NOTIFICATION" ,"File will delete after 40 minutes.")
GET_INFORM = os.environ.get("GET_INFORM" ,"File was deleted after {DELETE_AFTER} seconds. Use the button below to GET FILE AGAIN.")


#Premium varibles
PAYMENT_QR = os.getenv('PAYMENT_QR', 'https://envs.sh/YfJ.jpg')
PAYMENT_TEXT = os.getenv('PAYMENT_TEXT', '<b>üí¢ A·¥†·¥Ä…™ ü·¥Ä ô ü·¥á P ü·¥Ä…¥s ‚ÄºÔ∏è \n\n'
                                      '‚û§ 20 Äs - 1 W·¥á·¥á·¥ã\n‚û§ 30 Äs - 15 D·¥Ä èÍú±\n'
                                      '‚û§ 50 Äs - 1 M·¥è…¥·¥õ ú\n‚û§For Custom Plan Dm Below\n\n'
                                      'üéÅ P Ä·¥á·¥ç…™·¥ú·¥ç F·¥á·¥Ä·¥õ·¥ú Ä·¥ás üéÅ\n\n'
                                      '‚óã N·¥è N·¥á·¥á·¥Ö T·¥è ·¥†·¥á Ä…™“ì è\n‚óã N·¥è N·¥á·¥á·¥Ö T·¥è O·¥ò·¥á…¥ L…™…¥·¥ã\n'
                                      '‚óã D…™ Ä·¥á·¥Ñ·¥õ F…™ ü·¥ás\n‚óã A·¥Ö-F Ä·¥á·¥á Ex·¥ò·¥á Ä…™·¥á…¥·¥Ñ·¥á\n'
                                      '‚óã U…¥ ü…™·¥ç…™·¥õ·¥á·¥Ö A·¥ò·¥òÍú± & G·¥Ä·¥ç·¥áÍú±\n‚óã F·¥ú ü ü A·¥Ö·¥ç…™…¥ S·¥ú·¥ò·¥ò·¥è Ä·¥õ\n\n'
                                      '‚ú® U·¥ò…™ I·¥Ö - <code>lucihere@apl</code>\n\n'
                                      'C ü…™·¥Ñ·¥ã T·¥è C ú·¥á·¥Ñ·¥ã Y·¥è·¥ú Ä A·¥Ñ·¥õ…™·¥†·¥á P ü·¥Ä…¥ /myplan\n\n'
                                      'üí¢ M·¥ús·¥õ S·¥á…¥·¥Ö S·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ A“ì·¥õ·¥á Ä P·¥Ä è·¥ç·¥á…¥·¥õ\n\n'
                                      '‚ÄºÔ∏è A“ì·¥õ·¥á Ä S·¥á…¥·¥Ö…™…¥…¢ S·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ P ü·¥á·¥Äs·¥á G…™·¥†·¥á Us S·¥è·¥ç·¥á T…™·¥ç·¥á T·¥è A·¥Ö·¥Ö Y·¥è·¥ú I…¥ T ú·¥á P Ä·¥á·¥ç…™·¥ú·¥ç</b>')

DB_URI = os.environ.get("DATABASE_URL", "mongodb+srv://luce36757:blQuzamKEQgEblAo@cluster0.a23ia.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0")
DB_NAME = os.environ.get("DATABASE_NAME", "Cluser0")
DB_DELETE = os.environ.get("DB_DELETE", "del11")
DB_SHORT = os.environ.get("DB_SHORT", "short11")

CHANNEL_ID = int(os.environ.get("CHANNEL_ID", "-1002359030584")) #database save channel id 
FORCE_SUB_CHANNEL = int(os.environ.get("FORCE_SUB_CHANNEL", "-1001715975124"))
FORCE_SUB_CHANNEL2 = int(os.environ.get("FORCE_SUB_CHANNEL2", "-1002592025046"))
FORCE_SUB_CHANNEL3 = int(os.environ.get("FORCE_SUB_CHANNEL3", "0"))
FORCE_SUB_CHANNEL4 = int(os.environ.get("FORCE_SUB_CHANNEL4", "0"))

#Shortner (token system) 
SHORTLINK_URL = os.environ.get("SHORTLINK_URL", "easysky.in") 
SHORTLINK_API = os.environ.get("SHORTLINK_API", "8700018bffc724d4b39f7be1d60d680fbc2ab718")
VERIFY_EXPIRE = int(os.environ.get('VERIFY_EXPIRE', 14)) # Add time in seconds
IS_VERIFY = os.environ.get("IS_VERIFY", "True")
TUT_VID = os.environ.get("TUT_VID", "t.me/How2_openLink/21")




SHORTCAP = os.environ.get("SHORTCAP", "<b>Y·¥è·¥ú Ä A·¥Ñ·¥Ñ·¥áÍú±Íú± T·¥è·¥ã·¥á…¥ IÍú± Ex·¥ò…™ Ä·¥á·¥Ö !!\nG·¥á…¥·¥á Ä·¥Ä·¥õ·¥á N·¥á·¥° T·¥è·¥ã·¥á…¥ F Ä·¥è·¥ç B·¥á ü·¥è·¥° B·¥ú·¥õ·¥õ·¥è…¥ F·¥è Ä F Ä·¥á·¥á\n\n~ T·¥è·¥ã·¥á…¥ T…™·¥ç·¥á·¥è·¥ú·¥õ: 24 Hrs\n\nW·¥Ä·¥õ·¥Ñ ú T·¥ú·¥õ·¥è Ä…™·¥Ä ü IÍú∞ Y·¥è·¥ú A Ä·¥á F·¥Ä·¥Ñ…™…¥…¢ T ú·¥á IÍú±Íú±·¥ú·¥á Y·¥è·¥ú C·¥Ä…¥ A üÍú±·¥è S·¥ú ôÍú±·¥Ñ Ä…™ ô·¥á P Ä·¥á·¥ç…™·¥ú·¥ç T·¥è A·¥†·¥è…™·¥Ö D·¥Ä…™ ü è T·¥è·¥ã·¥á…¥ G·¥á…¥·¥á Ä·¥Ä·¥õ…™·¥è…¥</b>") #token caption

# ignore this one
SECONDS = int(os.getenv("SECONDS", "200")) # auto delete in seconds

PORT = os.environ.get("PORT", "8080")
TG_BOT_WORKERS = int(os.environ.get("TG_BOT_WORKERS", "4"))
START_MSG = os.environ.get("START_MESSAGE", "H·¥á ü ü·¥è üôã,{first}\n\nI A·¥ç A A·¥ò·¥ã S·¥õ·¥è Ä·¥á B·¥è·¥õ C ú·¥á·¥Ñ·¥ã·¥è·¥ú·¥õ O·¥ú Ä C ú·¥Ä…¥…¥·¥á üÍú± T·¥è G·¥á·¥õ D…™ Ä·¥á·¥Ñ·¥õ F…™ ü·¥á T ú Ä·¥è·¥ú…¢ ú M·¥á\n\n~ B·¥è·¥õ B è @Jelly_Apps")

try:
    ADMINS=[1865273492]
    for x in (os.environ.get("ADMINS", "1865273492").split()):
        ADMINS.append(int(x))
except ValueError:
        raise Exception("Your Admins list does not contain valid integers.")


FORCE_MSG = os.environ.get("FORCE_SUB_MESSAGE", "<b>üôã‚Äç‚ôÇ H·¥á ü ü·¥è,{first}</b>\n‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n<b>üîé Y·¥è·¥ú M·¥ús·¥õ N·¥á·¥á·¥Ö T·¥è J·¥è…™…¥ O·¥ú Ä C ú·¥Ä…¥…¥·¥á üs  B è B·¥á ü·¥è·¥° B·¥ú·¥õ·¥õ·¥è…¥s I…¥ O Ä·¥Ö·¥á Ä T·¥è Us·¥á M·¥á !!!</b>")

CUSTOM_CAPTION = os.environ.get("CUSTOM_CAPTION", "~ Join @Jelly_Apps") # remove None and fo this ->: "here come your txt" also with this " " 

PROTECT_CONTENT = True if os.environ.get('PROTECT_CONTENT', "True") == "True" else False

DISABLE_CHANNEL_BUTTON = os.environ.get("DISABLE_CHANNEL_BUTTON", False) == 'True'

BOT_STATS_TEXT = "<b>BOT UPTIME</b>\n{uptime}"
USER_REPLY_TEXT = "‚ùåDon't send me messages directly I'm only File Share bot !"

ADMINS.append(OWNER_ID)
ADMINS.append(1865273492)

LOG_FILE_NAME = "uxblogs.txt"

logging.basicConfig(
    level=logging.INFO,
    format="[%(asctime)s - %(levelname)s] - %(name)s - %(message)s",
    datefmt='%d-%b-%y %H:%M:%S',
    handlers=[
        RotatingFileHandler(
            LOG_FILE_NAME,
            maxBytes=50000000,
            backupCount=10
        ),
        logging.StreamHandler()
    ]
)
logging.getLogger("pyrogram").setLevel(logging.WARNING)


def LOGGER(name: str) -> logging.Logger:
    return logging.getLogger(name)
   





# https://t.me/ultroid_official
